<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Pages on Stefan Siegl</title><link>https://stesie.github.io/pages/</link><description>Recent content in Pages on Stefan Siegl</description><generator>Hugo -- 0.123.7</generator><language>en-us</language><lastBuildDate>Thu, 02 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://stesie.github.io/pages/feed.xml" rel="self" type="application/rss+xml"/><item><title>Switching to Sway - My Journey Back to Linux</title><link>https://stesie.github.io/2025/01/switching-to-sway/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><guid>https://stesie.github.io/2025/01/switching-to-sway/</guid><description>A few days ago, I switched to the Sway window manager after returning to GNU/Linux a few months ago. Before spending a few years in the macOS ecosystem, I was a long-time user of i3. For those unfamiliar, i3 and Sway perform the same function, but i3 is built for X.org while Sway is designed for Wayland. In this post, I’ll share my impressions, lessons learned, and the challenges I faced during this transition.</description></item><item><title>comparing the incomparible -</title><link>https://stesie.github.io/2016/11/comparing-the-incomparible/</link><pubDate>Sun, 20 Nov 2016 00:00:00 +0000</pubDate><guid>https://stesie.github.io/2016/11/comparing-the-incomparible/</guid><description>Lucky me, living in the metropolitan area of Nuremberg, &amp;hellip; this year I attended three different developer-oriented open spaces hosted within one hour driving range from home.
devops camp in Nuremberg, six iterations so far, first one back in March 2014 And starting this year there are now two developer-centric events (both more or less claiming to be the first one):
developercamp in Würzburg, back in September 2016
swecamp in Tennenlohe/Erlangen, right yesterday &amp;amp; today</description></item><item><title>Starting a local developer meetup</title><link>https://stesie.github.io/2016/08/first-dev-night/</link><pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate><guid>https://stesie.github.io/2016/08/first-dev-night/</guid><description>As Ansbach (and the region around it) neither has a vibrant developer community nor a (regular) meetup to attract people to share their knowledge, mainly @niklas_heer and me felt like having to get active&amp;hellip;
Therefore we came up with the idea to host a monthly meetup named /dev/night at @Tradebyte office (from August on regularly every 2nd Tuesday evening), give a short talk to provide food for thought and afterwards tackle a small challenge together.</description></item><item><title>Pig Latin Kata</title><link>https://stesie.github.io/2016/08/pig-latin-kata/</link><pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate><guid>https://stesie.github.io/2016/08/pig-latin-kata/</guid><description>Yesterday I ran the Pig Latin kata at the local software craftsmenship meetup in Nuremberg. Picking Pig Latin as the kata to do was more a coincidence than planned, but it turned out to be an interesting choice.
So what I&amp;rsquo;ve prepared were four user stories (from which we only tackeled two; one team did three), going like this:
(if you&amp;rsquo;d like to do the kata refrain from reading ahead and do one story after another)</description></item><item><title>Serverless Pub Sub with AWS IoT</title><link>https://stesie.github.io/2016/04/aws-iot-pubsub/</link><pubDate>Sat, 02 Apr 2016 00:00:00 +0000</pubDate><guid>https://stesie.github.io/2016/04/aws-iot-pubsub/</guid><description>I&amp;rsquo;m currently very interested in serverless (aka no dedicated backend required) JavaScript Web Applications &amp;hellip; with AWS S3, Lambda &amp;amp; API Gateway you can actually get pretty far. Yet there is one thing I didn&amp;rsquo;t know how to do: Pub/Sub or &amp;ldquo;Realtime Messaging&amp;rdquo;.
Realtime messaging allows to build web applications that can instantly receive messages published by another application (or the same one running in a different person&amp;rsquo;s browser). There even are cloud services permitting to do exactly this, e.</description></item><item><title>thoughts on phpspec</title><link>https://stesie.github.io/2016/03/thoughts-on-phpspec/</link><pubDate>Thu, 24 Mar 2016 00:00:00 +0000</pubDate><guid>https://stesie.github.io/2016/03/thoughts-on-phpspec/</guid><description>As I’ve recently been poked whether I had used phpspec and I had to negate, today I finally gave it a try (doing the Bowling Kata) &amp;hellip;
phpspec has some class and method templating built into it. If for example a test fails due to a missing function, it asks whether it should create one (that does nothing at all). This is nice but IMHO breaks the workflow a bit as you have to move the cursor to the terminal window and answer the question.</description></item><item><title>phpspec screencast</title><link>https://stesie.github.io/2016/03/hello-phpspec/</link><pubDate>Wed, 23 Mar 2016 00:00:00 +0000</pubDate><guid>https://stesie.github.io/2016/03/hello-phpspec/</guid><description>After @sD_Tobi recently poked me whether I knew phpspec, … and initially I had no idea except for having heard of it … I found this excellent screencast on laracasts.com to get a first impression. It&amp;rsquo;s just 17 minutes and he&amp;rsquo;s really enthusiastic about it :-)</description></item><item><title>Happy &amp; Lucky Numbers</title><link>https://stesie.github.io/2016/03/happy-and-lucky-numbers/</link><pubDate>Thu, 10 Mar 2016 00:00:00 +0000</pubDate><guid>https://stesie.github.io/2016/03/happy-and-lucky-numbers/</guid><description>The other day I paired with the guys from @solutiondrive and @niklas_heer, we had a fun evening learing about happy numbers, shared PhpStorm knowledge, tried Codeception etc. Actually we didn&amp;rsquo;t even finish the &amp;ldquo;Happy Numbers&amp;rdquo; Kata, since we only wrote the classifying routine, not the loop generating the output.
On my way home I kept googling and also found out about Lucky Numbers. Lucky numbers are natural numbers, recursively filtered by a sieve that eliminates numbers based on their position (where the second number tells the elimination offsets).</description></item></channel></rss>